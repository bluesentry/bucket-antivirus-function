############
#
# Caches
#
# Caches may require a prefix, since caches in CircleCI 2.0 are immutable.
# A prefix provides an easy way to invalidate a cache.  See https://circleci.com/docs/2.0/caching/#clearing-cache
#
############

version: "2.1"

executors:
  primary:
    docker:
      - image: docker:17.05.0-ce
  python_test:
    docker:
      - image: circleci/python:3.7-stretch
  pre_commit_test:
    docker:
      - image: circleci/python:3.7-stretch

jobs:

  # `build` is used for building the archive
  build:
    executor: primary
    working_directory: ~/src
    steps:
      - setup_remote_docker:
          reusable: true    # default - false
          exclusive: true   # default - true
      - run:
          name: Dependencies
          command: apk add --no-cache make git curl openssh
      - checkout
      - run:
          name: Build
          command: make archive

  # `pre_commit_deps` is used for cache pre-commit sources
  pre_commit_deps:
    executor: pre_commit_test
    steps:
      - checkout

      - restore_cache:
          keys:
            - pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
      - run: sudo pip install pre-commit==1.18.3
      - run: pre-commit install-hooks

      - save_cache:
          key: pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
          paths:
            - ~/.cache/pre-commit

  # `pre_commit_test` is used to run pre-commit hooks on all files
  pre_commit_test:
    executor: pre_commit_test
    steps:
      - checkout
      - restore_cache:
          keys:
            - pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
      - run: sudo pip install pre-commit==1.18.3
      - run:
          name: Run pre-commit tests
          command: pre-commit run --all-files

  # `test` is used to run python tests
  test:
    executor: python_test
    steps:
      - checkout
      - restore_cache:
          keys:
            - pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
      - run: sudo pip install -r requirements.txt
      - run: sudo pip install -r requirements-dev.txt
      - run: nosetests

workflows:
  version: 2

  main:
    jobs:
      - pre_commit_deps
      - pre_commit_test:
          requires:
            - pre_commit_deps
      - test
      - build:
          requires:
            - pre_commit_test
            - test
